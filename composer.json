{
    "name": "tobias/oagtoolbox",
    "license": "proprietary",
    "type": "project",
    "autoload": {
        "psr-4": {
            "AppBundle\\": "src/AppBundle",
            "OagBundle\\": "src/OagBundle"
        },
        "classmap": [
            "app/AppKernel.php",
            "app/AppCache.php"
        ]
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        },
        "files": [
            "vendor/symfony/symfony/src/Symfony/Component/VarDumper/Resources/functions/dump.php"
        ]
    },
    "require": {
        "php": ">=5.5.9",
        "asika/pdf2text": "1.*",
        "doctrine/doctrine-bundle": "^1.6",
        "doctrine/doctrine-fixtures-bundle": "*",
        "doctrine/orm": "^2.5",
        "incenteev/composer-parameter-handler": "^2.0",
        "league/flysystem-ziparchive": "1.0.3",
        "phpoffice/phpword": "v0.13.*",
        "sensio/distribution-bundle": "^5.0.19",
        "sensio/framework-extra-bundle": "^3.0.2",
        "symfony/assetic-bundle": "^2.8",
        "symfony/monolog-bundle": "^3.1.0",
        "symfony/polyfill-apcu": "^1.0",
        "symfony/swiftmailer-bundle": "^2.3.10",
        "symfony/symfony": "3.3.*",
        "twig/twig": "^1.0||^2.0"
    },
    "require-dev": {
        "behat/behat": "^3.4",
        "behat/mink": "^1.7",
        "behat/mink-browserkit-driver": "^1.3",
        "behat/mink-extension": "^2.3",
        "behat/mink-goutte-driver": "^1.2",
        "behat/mink-selenium2-driver": "^1.3",
        "behat/symfony2-extension": "^2.1",
        "sensio/generator-bundle": "^3.0",
        "symfony/phpunit-bridge": "^3.0"
    },
    "scripts": {
        "symfony-scripts": [
            "Incenteev\\ParameterHandler\\ScriptHandler::buildParameters",
            "Sensio\\Bundle\\DistributionBundle\\Composer\\ScriptHandler::buildBootstrap",
            "Sensio\\Bundle\\DistributionBundle\\Composer\\ScriptHandler::clearCache",
            "Sensio\\Bundle\\DistributionBundle\\Composer\\ScriptHandler::installAssets",
            "Sensio\\Bundle\\DistributionBundle\\Composer\\ScriptHandler::installRequirementsFile",
            "Sensio\\Bundle\\DistributionBundle\\Composer\\ScriptHandler::prepareDeploymentTarget"
        ],
        "post-install-cmd": [
            "@symfony-scripts",
            "cp app/config/parameters.yml.sqlite app/config/parameters.yml",
            "mkdir -p web/uploads/tests web/xml/tests",
            "rm -f app/test.db",
            "php bin/console doctrine:database:create",
            "php bin/console doctrine:schema:create",
            "php bin/console doctrine:database:create --env=test",
            "php bin/console doctrine:schema:create --env=test",
            "php bin/console doctrine:fixtures:load --env=test",
            "php ./bin/console assets:install public --symlink --relative",
            "php ./bin/console assets:install public --symlink --relative --env=dev",
            "php ./bin/console assetic:dump --env=prod --no-debug",
            "if [ -S '/var/run/docker.sock' ]; then php ./bin/console oag:fetchimages; fi"
        ],
        "post-update-cmd": [
            "@symfony-scripts",
            "php ./bin/console assets:install public --symlink --relative",
            "php ./bin/console assets:install public --symlink --relative --env=dev",
            "php ./bin/console assetic:dump --env=prod --no-debug",
            "if [ -S '/var/run/docker.sock' ]; then php ./bin/console oag:fetchimages; fi"
        ],
        "start-dockers": [
          "docker pull openagdata/cove:live",
          "docker pull openagdata/dportal:live",
          "docker pull openagdata/nerserver:live",
          "docker pull openagdata/geocoder:live",
          "docker inspect openag_cove      > /dev/null && docker start openag_cove      || docker run -td --name openag_cove                 openagdata/cove:live",
          "docker inspect openag_dportal   > /dev/null && docker start openag_dportal   || docker run -td --name openag_dportal -p 8011:8011 openagdata/dportal:live",
          "docker inspect openag_nerserver > /dev/null && docker start openag_nerserver || docker run -td --name openag_nerserver            openagdata/nerserver:live",
          "docker inspect openag_geocoder  > /dev/null && docker start openag_geocoder  || docker run -td --name openag_geocoder --link openag_nerserver openagdata/geocoder:live"
        ]
    },
    "config": {
        "sort-packages": true
    },
    "extra": {
        "symfony-app-dir": "app",
        "symfony-bin-dir": "bin",
        "symfony-var-dir": "var",
        "symfony-web-dir": "web",
        "symfony-tests-dir": "tests",
        "symfony-assets-install": "relative",
        "incenteev-parameters": {
            "file": "app/config/parameters.yml"
        },
        "branch-alias": null
    }
}
